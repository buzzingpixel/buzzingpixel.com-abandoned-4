#!/usr/bin/env bash

# Reset
Reset="\033[0m"; # Text Reset

# Regular Colors
Black="\033[0;30m"; # Black
Red="\033[0;31m"; # Red
Green="\033[0;32m"; # Green
Yellow="\033[0;33m"; # Yellow
Blue="\033[0;34m"; # Blue
Purple="\033[0;35m"; # Purple
Cyan="\033[0;36m"; # Cyan
White="\033[0;37m"; # White

# Bold
BBlack="\033[1;30m"; # Black
BRed="\033[1;31m"; # Red
BGreen="\033[1;32m"; # Green
BYellow="\033[1;33m"; # Yellow
BBlue="\033[1;34m"; # Blue
BPurple="\033[1;35m"; # Purple
BCyan="\033[1;36m"; # Cyan
BWhite="\033[1;37m"; # White

cmd=${1};
allArgs=${@};
allArgsExceptFirst=${@:2};
secondArg=${2};

## If no command provided, list commands
if [[ -z "${cmd}" ]]; then
    valid=true;
    printf "${Green}The following commands are available:\n${Yellow}";
    printf "  ./dev up\n";
    printf "  ./dev down\n";
    printf "  ./dev composer [args]\n"
    printf "  ./dev login [args]${Reset}\n"
fi

if [[ "${cmd}" = "up" ]] || [[ "${cmd}" = "run" ]]; then
    docker-compose -f docker-compose.yml -p buzzingpixel up -d;
    exit 0;
fi

if [[ "${cmd}" = "down" ]]; then
    docker-compose -f docker-compose.yml -p buzzingpixel down;
    exit 0;
fi

if [[ "${cmd}" = "composer" ]]; then
    docker exec -it --user root --workdir /opt/project buzzingpixel-php bash -c "${allArgs}";
    exit 0;
fi

if [[ "${cmd}" = "login" ]]; then
    docker exec -it --user root --workdir /opt/project buzzingpixel-${secondArg} bash;
    exit 0;
fi

printf "${Red}Specified command not found${Reset}\n";
exit 1;
