{% do requireVariables({
    metaPayload: 'App\\Content\\Meta\\MetaPayload',
}) %}

{# @var \Config\General GeneralConfig #}
{# @var \App\Content\Meta\MetaPayload metaPayload #}

{% set ogType = metaPayload.getOgType() ?? 'website' %}
{% set twitterCardType = twitterCardType ?? 'summary' %}

<!doctype html>
<html lang="en">
<head>
    {# Reporting for duty #}
    <title>{% if metaPayload.getMetaTitle() %}{{ metaPayload.getMetaTitle() }} | {% endif %}{{ GeneralConfig.siteName }}</title>

    {% if metaPayload.getNoIndex() %}
    <meta name="robots" content="noindex">
    {% endif %}

    {# Technical browser configuration stuff #}
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    {# TODO: Icons #}
    {# <link rel="apple-touch-icon-precomposed" sizes="57x57" href="apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon-precomposed" sizes="60x60" href="apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon-precomposed" sizes="120x120" href="apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon-precomposed" sizes="76x76" href="apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon-precomposed" sizes="152x152" href="apple-touch-icon-152x152.png">
    <link rel="icon" type="image/png" href="favicon-196x196.png" sizes="196x196">
    <link rel="icon" type="image/png" href="favicon-96x96.png" sizes="96x96">
    <link rel="icon" type="image/png" href="favicon-32x32.png" sizes="32x32">
    <link rel="icon" type="image/png" href="favicon-16x16.png" sizes="16x16">
    <link rel="icon" type="image/png" href="favicon-128.png" sizes="128x128">
    <meta name="application-name" content="&nbsp;">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="mstile-144x144.png">
    <meta name="msapplication-square70x70logo" content="mstile-70x70.png">
    <meta name="msapplication-square150x150logo" content="mstile-150x150.png">
    <meta name="msapplication-wide310x150logo" content="mstile-310x150.png">
    <meta name="msapplication-square310x310logo" content="mstile-310x310.png"> #}

    {# OG Metadata #}
    <meta property="og:type" content="{{ ogType }}">
    <meta property="og:site_name" content="{{ GeneralConfig.siteName }}">
    <meta property="og:title" content="{{ metaPayload.getMetaTitle()|default(GeneralConfig.siteName) }}" itemprop="name">
    {% if metaPayload.getMetaDescription() %}
    <meta property="og:description" content="{{ metaPayload.getMetaDescription() }}">
    {% endif %}
    {# TODO: Set up share image #}
    {# <meta property="og:image" content="{{ shareImage|default('/share.png') }}" itemprop="image"> #}
    {{ block('ogData') ?? '' }}

    {# Twitter card data #}
    <meta name="twitter:card" content="{{ twitterCardType|default('summary') }}">
    {% if GeneralConfig.twitterHandle %}
        <meta name="twitter:site" content="@{{ GeneralConfig.twitterHandle }}">
    {% endif %}
    <meta name="twitter:title" content="{{ metaTitle|default(GeneralConfig.siteName) }}">
    {% if metaPayload.getMetaDescription() %}
    <meta property="twitter:description" content="{{ metaPayload.getMetaDescription() }}">
    {% endif %}
    {# TODO: Set up share image #}
    {# <meta property="twitter:image" content="{{ shareImage|default('/share.png') }}"> #}
    {{ block('twitterData') ?? '' }}

    {% for stylesheet in GeneralConfig.stylesheets %}
        <link rel="stylesheet" href="{{ stylesheet }}">
    {% endfor %}
    <link
        rel="stylesheet"
        href="/assets/css/{{ readJson(GeneralConfig.rootPath ~ '/public/assets/css/manifest.json')['style.min.css'] }}"
    >

    {# Get any queued up scripts and styles for head #}
    {{ block('endHead') ?? '' }}

    <script
        src="/assets/js/{{ readJson(GeneralConfig.rootPath ~ '/public/assets/js/manifest.json')['run-when-ready.js'] }}"
        type="text/javascript"
    ></script>
</head>
<body class="antialiased font-sans bg-nandor dark:bg-mine-shaft-dark">
    {# Get any queued up body items #}
    {{ block('beginBody') ?? '' }}

    {# Get content #}
    {% include 'Http/_Global/MainNav.twig' only %}
    <main class="bg-aqua-haze dark:bg-mine-shaft">
        {{ block('content') ?? '' }}
    </main>
    {% include 'Http/_Global/Footer.twig' only %}

    {# Output JS from globals #}
    {% for jsFile in GeneralConfig.jsFiles %}
        {% if jsFile is iterable %}
            <script
                src="{{ jsFile.src }}"
                {% if jsFile['type'] is defined %}
                type="{{ jsFile.type }}"
                {% endif %}
            ></script>
        {% else %}
            <script src="{{ jsFile }}"></script>
        {% endif %}
    {% endfor %}
    <script
        src="/assets/js/{{ readJson(GeneralConfig.rootPath ~ '/public/assets/js/manifest.json')['main.js'] }}"
        type="module"
    ></script>

    {# Get any queued up body items #}
    {{ block('endBody') ?? '' }}

    {# TODO: set up analytics and tracking script for project #}
    {#{% if getenv('ENVIRONMENT') == 'prod' %}
    {% endif %}#}
</body>
